name: Compilation test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          submodules: true


      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ python3 libgl1 libgl1-mesa-dri

      - name: Install dependencies (MacOS)
        if: runner.os == 'macOS'
        run: brew install cmake python

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes
          choco install python --yes


      - name: Install Conan
        run: pip install conan


      - name: Cache Conan dependencies
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.*') }}
          restore-keys: |
            ${{ runner.os }}-conan-


      - name: Configure Conan
        run: conan profile detect --force


      - name: Export local Conan recipes
        run: >
          conan export conan_extern/conan-skia/recipes/skia/all
          --name=skia
          --version=138.20250708.0


      - name: Install Conan dependencies
        run: >
          conan install .
          --output-folder=build
          --build=missing
          -s build_type=Release


      - name: Configure CMake
        run: >
          cmake -S . -B build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE="build/conan_toolchain.cmake"


      - name: Build
        run: cmake --build build --config Release

